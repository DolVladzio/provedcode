#--------------------------
  version: '3'
  #--------------------------
  services:
  #--------------------------
    db:
      image: postgres:13.18-alpine3.20
      restart: always
      container_name: db
      env_file:
        - .env
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      networks:
        - mynetwork
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
    #--------------------------
    backend:
      build:
        context: ./backend
      image: ${DOCKER_LOGIN}/backend
      container_name: backend
      restart: always
      env_file:
        - .env
      environment:
        DB_URL: ${DB_URL}
        DB_LOGIN: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
      ports:
        - "8080:8080"
      networks:
        - mynetwork
      depends_on:
        - db
    #--------------------------
    frontend:
      build:
        context: ./frontend
        args:
          REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
      image: ${DOCKER_LOGIN}/frontend
      container_name: frontend
      restart: always
      env_file:
        - .env
      ports:
        - "80:80"
      networks:
        - mynetwork
      depends_on:
        - backend
  #--------------------------
  networks:
    mynetwork:
      driver: bridge
  #--------------------------
  volumes:
    postgres_data:
