#--------------------------
version: '3.8'
#--------------------------
services:
  # == DB =====================
  db:
    image: postgres:13.18-alpine3.20
    restart: always
    container_name: db
    env_file:
      - .env
    environment:
      POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
      POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
      POSTGRES_DB: "${{ secrets.POSTGRES_DB }}"
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  #== Backend =================
  backend:
    build:
      context: ./backend
    restart: always
    container_name: backend
    env_file:
      - .env
    environment:
      DB_URL: "${{ secrets.DB_URL }}"
      DB_LOGIN: "${{ secrets.POSTGRES_USER }}"
      DB_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    depends_on:
      - db
  #== Frontend ================
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_BASE_URL: "${{ secrets.REACT_APP_BASE_URL}}"
    restart: always
    container_name: frontend
    env_file:
      - .env
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - mynetwork
    depends_on:
      - backend
# == Networks =================
networks:
  mynetwork:
    driver: bridge
# == Volumes ==================
volumes:
  postgres_data:
#--------------------------
