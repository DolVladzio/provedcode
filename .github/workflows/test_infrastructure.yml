name: Testing frontend and backend

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # == Create .env file and set all necessary envs ==========    
    - name: Creating .env file with necessary envs
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "DB_URL=${{ secrets.DB_URL }}" >> .env
        echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> .env
        echo "REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}" >> .env
        echo "DOCKER_LOGIN=${{ secrets.DOCKER_LOGIN }}" >> .env
    # == Setup the whole infrastructure =======================
    - name: Setup all infrastructure
      run: docker compose up -d
    # == Wait 10sec to get backend' logs ======================
    - name: Waiting 10sec
      run: sleep 10
    # == Look for created tables
    - name: Check db' tables
      run: docker exec db psql -U "${{ secrets.POSTGRES_USER }}" -d "${{ secrets.POSTGRES_DB }}" -c "\dt"
    # == Looking for any error/issues =========================
    - name: Check frontend' logs
      run: docker logs frontend
    # == Looking for any error/issues =========================
    - name: Check backend' logs
      run: docker logs backend
    # == ===
    - name: Testing website
      uses: cypress-io/github-action@v6
      env:
        CYPRESS_BASE_URL: http://localhost:80
      with:
        working-directory: ./.github/tests
    # == Login to the DockerHub ===============================
    - name: Login to the DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_LOGIN }}" --password-stdin
    # == Push images to DockerHub ========================
    - name: Push images to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_LOGIN }}/frontend
        docker push ${{ secrets.DOCKER_LOGIN }}/backend
    # == Configure AWS ===================================
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    # == Configure AWS ===================================
    - name: Testing AWS data
      run: aws sts get-caller-identity
    # == Install Terraform ===============================
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0
    # == Initialize/Validation Terraform =================
    - name: Terraform Init
      working-directory: ./EKS/terraform
      run: terraform init && terraform validate
    # == Plan Terraform changes ==========================
    - name: Terraform Plan
      working-directory: ./EKS/terraform
      run: terraform plan
    # == Launch Terraform ================================
    - name: Run Terraform
      working-directory: ./EKS/terraform
      run: terraform apply --auto-approve
    # == ===
    - name: Wait 3m to launch k8s locally
      run: sleep 180
    # == Delete everything ===============================
    - name: Deleting everything
      working-directory: ./EKS/terraform
      run: terraform destroy --auto-approve
